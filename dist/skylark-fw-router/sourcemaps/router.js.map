{"version":3,"sources":["router.js"],"names":["define","skylark","langx","_curCtx","_prevCtx","_baseUrl","_homePath","_routes","_cache","_hub","Evented","createEvent","type","props","e","CustomEvent","safeMixin","Route","inherit","klassName","init","name","setting","pathto","mixin","pattern","paramNames","match","map","paramName","substring","replace","this","_setting","params","regex","RegExp","self","forEach","eventName","isFunction","on","enter","ctx","query","r","_entering","Deferred","when","then","route","result","trigger","_entered","exit","_exiting","_exited","path","names","x","indexOf","m","slice","decodeURIComponent","exec","i","len","length","val","dispatch","force","current","previous","go","router","useHistoryApi","state","window","history","pushState","document","title","dispatchEvent","useHashbang","newHash","location","hash","noCache","finded","each","ret","routes","settings","isDefined","hub","off","apply","arguments","one","routeName","baseUrl","homePath","start","host","initPath","pathname","undefined","startsWith","addEventListener","preventDefault"],"mappings":"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","file":"../router.js","sourcesContent":["define([\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\"\r\n], function(skylark, langx) {\r\n\r\n    var _curCtx,\r\n        _prevCtx,\r\n        _baseUrl,\r\n        _homePath,\r\n        _routes = {},\r\n        _cache = {},\r\n        _hub = new langx.Evented();\r\n\r\n    function createEvent(type,props) {\r\n        var e = new CustomEvent(type,props);\r\n        return langx.safeMixin(e, props);\r\n    }\r\n\r\n    var Route = langx.Evented.inherit({\r\n        klassName: \"Route\",\r\n        init: function(name, setting) {\r\n            setting = langx.mixin({}, setting);\r\n            var pathto = setting.pathto || \"\",\r\n                pattern = pathto,\r\n                paramNames = pattern.match(/\\:([a-zA-Z0-9_]+)/g);\r\n            if (paramNames !== null) {\r\n                paramNames = paramNames.map(function(paramName) {\r\n                    return paramName.substring(1);\r\n                });\r\n                pattern = pattern.replace(/\\:([a-zA-Z0-9_]+)/g, '(.*?)');\r\n            } else {\r\n                paramNames = [];\r\n            }\r\n            if (pattern === \"*\") {\r\n                pattern = \"(.*)\";\r\n            } else {\r\n                pattern = pattern.replace(\"/\", \"\\\\/\");\r\n            }\r\n\r\n            this._setting = setting;\r\n            this.name = name;\r\n            this.pathto = pathto;\r\n            this.paramNames = paramNames;\r\n            this.params = pattern;\r\n            this.regex = new RegExp(\"^\" + pattern + \"$\", \"\");\r\n\r\n            var self = this;\r\n            [\"entering\", \"entered\", \"exiting\", \"exited\"].forEach(function(eventName) {\r\n                if (langx.isFunction(setting[eventName])) {\r\n                    self.on(eventName, setting[eventName]);\r\n                }\r\n            });\r\n        },\r\n\r\n        enter: function(ctx,query) {\r\n            if (query) {\r\n                var r = this._entering(ctx),\r\n                    self = this;\r\n\r\n                return langx.Deferred.when(r).then(function(){\r\n                    var e = createEvent(\"entering\", {\r\n                        route: self,\r\n                        result: true\r\n                    });\r\n\r\n                    self.trigger(e);\r\n\r\n                    return e.result;\r\n                });\r\n            } else {\r\n                this._entered(ctx);\r\n\r\n                this.trigger(createEvent(\"entered\", langx.safeMixin({\r\n                    route: this\r\n                }, ctx)));\r\n                return this;\r\n            }\r\n        },\r\n\r\n        exit: function(ctx, query) {\r\n            if (query) {\r\n                var ok = this._exiting(ctx);\r\n                if (!ok) {\r\n                    return false;\r\n                }\r\n\r\n                var e = createEvent(\"exiting\", {\r\n                    route: this,\r\n                    result: true\r\n                });\r\n\r\n                this.trigger(e);\r\n\r\n                return e.result;\r\n            } else {\r\n                this._exited(ctx);\r\n                this.trigger(createEvent(\"exited\", langx.safeMixin({\r\n                    route: this\r\n                }, ctx)));\r\n\r\n                return this;\r\n            }\r\n        },\r\n\r\n        match: function(path) {\r\n            var names = this.paramNames,\r\n                x = path.indexOf('?'),\r\n                path = ~x ? path.slice(0, x) : decodeURIComponent(path),\r\n                m = this.regex.exec(path);\r\n\r\n            if (!m) {\r\n                return false\r\n            };\r\n\r\n            var params = {};\r\n            for (var i = 1, len = m.length; i < len; ++i) {\r\n                var name = names[i - 1],\r\n                    val = decodeURIComponent(m[i]);\r\n                params[name] = val;\r\n            }\r\n\r\n            return params;\r\n        },\r\n\r\n        path: function(params) {\r\n            var path = this.pathto;\r\n            if (params) {\r\n                path = path.replace(/:([a-zA-Z0-9_]+)/g, function(match, paramName) {\r\n                    return params[paramName];\r\n                });\r\n            }\r\n            return path;\r\n        },\r\n\r\n        _entering: function(ctx) {\r\n            return true;\r\n        },\r\n        _entered: function(ctx) {\r\n            return true;\r\n        },\r\n        _exiting: function(ctx) {\r\n            return true;\r\n        },\r\n        _exited: function(ctx) {\r\n            return true;\r\n        },\r\n    });\r\n\r\n    function current() {\r\n        return _curCtx;\r\n    }\r\n\r\n    // refresh the current route\r\n    function dispatch(ctx) {\r\n\r\n        if (_curCtx) {\r\n            var ret = _curCtx.route.exit({\r\n                path: _curCtx.path,\r\n                params: _curCtx.params\r\n            }, true);\r\n            if (!ret) {\r\n                return;\r\n            }\r\n        }\r\n\r\n        _prevCtx = _curCtx;\r\n        _curCtx = ctx;\r\n        if (!_curCtx.route) {\r\n            var m = map(_curCtx.path);\r\n            _curCtx.route = m.route;\r\n            _curCtx.params = m.params;\r\n        }\r\n\r\n        var r = _curCtx.route.enter({\r\n            force: _curCtx.force,\r\n            path: _curCtx.path,\r\n            params: _curCtx.params\r\n        },true);\r\n\r\n        langx.Deferred.when(r).then(function() {\r\n            _hub.trigger(createEvent(\"routing\", {\r\n                current: _curCtx,\r\n                previous: _prevCtx\r\n            }));\r\n\r\n            _curCtx.route.enter({\r\n                path: _curCtx.path,\r\n                params: _curCtx.params\r\n            },false);\r\n\r\n            if (_prevCtx) {\r\n                _prevCtx.route.exit({\r\n                    path: _prevCtx.path,\r\n                    params: _prevCtx.params\r\n                }, false);\r\n            }\r\n\r\n            _hub.trigger(createEvent(\"routed\", {\r\n                current: _curCtx,\r\n                previous: _prevCtx\r\n            }));\r\n        });\r\n    }\r\n\r\n    function go(path, force) {\r\n        if (!force && _curCtx && _curCtx.path == path) {\r\n            return false;\r\n        }\r\n        var ctx = map(path);\r\n        if (ctx) {\r\n            ctx.path = path;\r\n\r\n            if (router.useHistoryApi) {\r\n                var state = {\r\n                    force: force,\r\n                    path: path\r\n                }\r\n\r\n                window.history.pushState(state, document.title, (_baseUrl + path).replace(\"//\", \"/\"));\r\n                window.dispatchEvent(createEvent(\"popstate\", {\r\n                    state: state\r\n                }));\r\n            } else if (router.useHashbang) {\r\n                var newHash = \"#!\" + path;\r\n                if (window.location.hash !== newHash) {\r\n                    window.location.hash = newHash;\r\n                } else {\r\n                    dispatch(ctx);\r\n                };\r\n            } else {\r\n                dispatch(ctx);\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    function map(path, noCache) {\r\n        var finded = false;\r\n        if (!noCache) {\r\n            finded = _cache[path];\r\n            if (finded) {\r\n                return finded;\r\n            }\r\n        }\r\n        langx.each(_routes, function(name, route) {\r\n            var ret = route.match(path);\r\n            if (ret) {\r\n                finded = {\r\n                    route: route,\r\n                    params: ret\r\n                }\r\n                return false;\r\n            }\r\n            return true;\r\n        });\r\n        if (finded && !noCache) {\r\n            _cache[path] = finded;\r\n        }\r\n        return finded;\r\n    }\r\n\r\n    function path(routeName, params) {\r\n        var route = _routes[routeName],\r\n            path;\r\n        if (route) {\r\n            path = route.path(params);\r\n        }\r\n        return path;\r\n    }\r\n\r\n    function previous() {\r\n        return _prevCtx;\r\n    }\r\n\r\n    function baseUrl(path) {\r\n        if (langx.isDefined(path)) {\r\n            _baseUrl = path;\r\n            return this;\r\n        } else {\r\n            return _baseUrl;\r\n        }\r\n    }\r\n\r\n    function hub(){\r\n        return _hub;\r\n    }\r\n\r\n    function homePath(path) {\r\n        if (langx.isDefined(path)) {\r\n            _homePath = path;\r\n            return this;\r\n        } else {\r\n            return _homePath;\r\n        }\r\n    }\r\n\r\n    function route(name, setting) {\r\n        if (langx.isDefined(setting)) {\r\n            var settings = {};\r\n            settings[name] = setting;\r\n            routes(settings);\r\n            return this;\r\n        } else {\r\n            return _routes[name];\r\n        }\r\n    }\r\n\r\n    function routes(settings) {\r\n        if (!langx.isDefined(settings)) {\r\n            return langx.mixin({}, _routes);\r\n        } else {\r\n            for (var name in settings) {\r\n                _routes[name] = new router.Route(name, settings[name]);\r\n            }\r\n        }\r\n    }\r\n\r\n    //starts routing urls\r\n    function start() {\r\n        if (router.useHashbang == null && router.useHistoryApi == null) {\r\n            if (window.location.host  && window.history.pushState) {\r\n                //web access\r\n                router.useHistoryApi = true;\r\n            } else {\r\n                // local access\r\n                router.useHashbang = true;\r\n            }\r\n        }\r\n\r\n        var initPath = \"\";\r\n\r\n        if (router.useHistoryApi) {\r\n            initPath = window.location.pathname;\r\n            if (_baseUrl === undefined) {\r\n                _baseUrl = initPath.replace(/\\/$/, \"\");\r\n            }\r\n            initPath = initPath.replace(_baseUrl, \"\") || _homePath || \"/\";\r\n        } else if (router.useHashbang) {\r\n            initPath = window.location.hash.replace(\"#!\", \"\") || _homePath || \"/\";\r\n        } else {\r\n            initPath = \"/\";\r\n        }\r\n\r\n        if (!initPath.startsWith(\"/\")) {\r\n            initPath = \"/\" + initPath;\r\n        }\r\n        /*\r\n        eventer.on(document.body, \"click\", \"a[href]\", function(e) {\r\n            var elm = e.currentTarget,\r\n                url = elm.getAttribute(\"href\");\r\n\r\n            if (url == \"#\") {\r\n                return;\r\n            }\r\n            if (url && langx.isSameOrigin(elm.href)) {\r\n                if (url.indexOf(_baseUrl) === 0) {\r\n                    url = url.substr(_baseUrl.length);\r\n                    eventer.stop(e);\r\n                    url = url.replace('#!', '');\r\n                    go(url);\r\n                }\r\n            }\r\n        });\r\n        */\r\n        if (router.useHistoryApi) {\r\n            window.addEventListener(\"popstate\", function(e) {\r\n                if(e.state) dispatch(e.state);\r\n                e.preventDefault();\r\n            });\r\n        } else if (router.useHashbang) {\r\n            window.addEventListener(\"hashchange\", function(e) {\r\n                dispatch({\r\n                    path: window.location.hash.replace(/^#!/, \"\")\r\n                });\r\n                e.preventDefault();\r\n            });\r\n        }\r\n\r\n        go(initPath);\r\n    }\r\n\r\n    var router = function() {\r\n        return router;\r\n    };\r\n\r\n    langx.mixin(router, {\r\n        \"Route\": Route,\r\n\r\n        // Current path being processed\r\n        \"current\": current,\r\n\r\n        // Changes the current path\r\n        \"go\": go,\r\n\r\n        \"map\": map,\r\n\r\n        \"hub\": hub,\r\n\r\n        \"off\": function() {\r\n            _hub.off.apply(_hub, arguments);\r\n        },\r\n\r\n        \"on\": function() {\r\n            _hub.on.apply(_hub, arguments);\r\n        },\r\n\r\n        \"one\": function() {\r\n            _hub.one.apply(_hub, arguments);\r\n        },\r\n\r\n        // Returns the path of the named route\r\n        \"path\": path,\r\n\r\n        \"previous\": previous,\r\n\r\n        \"baseUrl\": baseUrl,\r\n\r\n        \"homePath\": homePath,\r\n\r\n        \"route\": route,\r\n\r\n        \"routes\": routes,\r\n\r\n        //starts routing urls\r\n        \"start\": start,\r\n\r\n        \"trigger\": function(e) {\r\n            _hub.trigger(e);\r\n            return this;\r\n        },\r\n\r\n        \"useHistoryApi\": null,\r\n        \"useHashbang\": null\r\n    });\r\n\r\n    return skylark.router = router;\r\n});\r\n"]}